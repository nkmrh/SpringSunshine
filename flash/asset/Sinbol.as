package asset{	import flash.display.*;	import flash.events.*;	import org.libspark.betweenas3.BetweenAS3;	import org.libspark.betweenas3.tweens.*;	import org.libspark.betweenas3.events.*;	import org.libspark.betweenas3.easing.*;	public class Sinbol extends Sprite {		private var mc:Sprite;		private var colors:Array = [		 0xFFFFFF,		 0x006599,		 0x00FFCB,		 0x99FF99,		 0x9965FF,		 0x9900CC,		 0xFF99FF,		 0xFFCC99,		 0xFFFF32,		 0x6598FF,		 0xFF00CC,		 0xFF0066,		 0x663366,		 0x99CC00		 ];		private var _sp:Number;		private var _id:uint;		private var _line:uint;		private var _ofset:Number;		private var _mWidht:Number;		private var _mHeight:Number;		private var _mTween:ITween;		private var _xl:Number;		private var _mAlpha:Number;		public function Sinbol(id:uint, line:uint, w:Number, h:Number, o:Number, s:Number) {			_id = id;			_line = line;			_ofset = o;			_mWidht = w;			_mHeight = h;			_sp = s;			_mAlpha = 0.2;						mc = new Sprite();			setGraphics(mc);			mc.rotation = 45;			_xl = Math.sqrt(Math.pow(_mWidht,2) + Math.pow(_mHeight,2));			mc.x = _id * _xl * _ofset;			mc.y = _line * _xl * _ofset;			mc.blendMode = BlendMode.ADD;			mc.cacheAsBitmap = true;			this.addChild(mc);			addEventListener(Event.ENTER_FRAME, enterframe);		}		public function resetSpeed(sp:Number):void {			_sp = int(sp);		}		public function tweenStop():void {			_mTween.stop();		}				public function resetAlpha(num:Number):void{			_mAlpha = num;		}		private function enterframe(evt:Event):void {			if (mc.y > stage.stageHeight) {				setGraphics(mc);				BetweenAS3.tween(mc,{alpha:1},{alpha:0},1).play();				mc.y =  -  _xl * _ofset;			} else {				mc.y += _sp;			}			//setGraphics(mc);		}/*		private function tweenComp(evt:TweenEvent):void {			dispatchEvent(new Event("tweencomp"));			setTween(mc);		}		*/		private function setGraphics(m:Sprite):void {			var g:Graphics=m.graphics;			var num:uint=colors.length;			var gradCol:Array = new Array();			for (var i:uint = 0; i < 2; i++) {				var col:Number=int(Math.random()*num);				gradCol.push(colors[col]);			}			//trace(col);			g.clear();			//g.beginFill(colors[col], 0.1);			var ratios:Array=[0x00,0xFF];			var alphas:Array=[_mAlpha,_mAlpha];			g.beginGradientFill(GradientType.LINEAR, gradCol, alphas, ratios);			g.drawRect(0, 0, _mWidht, _mHeight);			g.endFill();		}		public function setTween():void {			var rnd:Array=Wrapper(parent).rnd;			if (_mTween!=null) {				_mTween.stop();			}			_mTween=BetweenAS3.to(mc,{scaleX:rnd[0],scaleY:rnd[1]},7);			//mtween.stopOnComplete = false;			//mtween.addEventListener(TweenEvent.COMPLETE, tweenComp);			_mTween.play();		}	}}