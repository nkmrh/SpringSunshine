package btn{	import flash.display.*;	import flash.events.*;	import com.bit101.components.*;	import org.libspark.betweenas3.BetweenAS3;	import org.libspark.betweenas3.tweens.*;	import org.libspark.betweenas3.events.*;	import org.libspark.betweenas3.easing.*;	public class Controler extends Sprite {		private var mTween:ITween;		public function Controler():void {			addEventListener(Event.ADDED_TO_STAGE, addHand);			alpha = 0;			var back:Sprite = new Sprite();			var g:Graphics = back.graphics;			g.beginFill(0x000000, 0.5);			g.drawRect(0, 700, 700, 150);			g.endFill();			this.addChild(back);			var timerS:VUISlider = new VUISlider(this,10,700,"TIME",timerSHand);			timerS.maximum = 30000;			timerS.minimum = 0;			var spyS:VUISlider = new VUISlider(this,50,700,"SPDY",spySHand);			spyS.maximum = 5;			spyS.minimum = 0;						var alpS:VUISlider = new VUISlider(this,90,700,"ALPH",alpSHand);			alpS.maximum = 1;			alpS.minimum = 0;									//color slider					var colsPos:Number = 380;						var redMS:VUISlider = new VUISlider(this,colsPos,700,"REDM",colorHand);			redMS.maximum = 1;			redMS.minimum = 0;						var greenMS:VUISlider = new VUISlider(this,colsPos+40,700,"GREM",colorHand);			greenMS.maximum = 1;			greenMS.minimum = 0;						var blueMS:VUISlider = new VUISlider(this,colsPos+80,700,"BLUM",colorHand);			blueMS.maximum = 1;			blueMS.minimum = 0;						var alphaMS:VUISlider = new VUISlider(this,colsPos+120,700,"ALPM",colorHand);			alphaMS.maximum = 1;			alphaMS.minimum = 0;						var redOS:VUISlider = new VUISlider(this,colsPos+160,700,"REDO",colorHand);			redOS.maximum = 255;			redOS.minimum = -255;						var greenOS:VUISlider = new VUISlider(this,colsPos+200,700,"GREO",colorHand);			greenOS.maximum = 255;			greenOS.minimum = -255;									var blueOS:VUISlider = new VUISlider(this,colsPos+240,700,"BLUO",colorHand);			blueOS.maximum = 255;			blueOS.minimum = -255;									var alphaOS:VUISlider = new VUISlider(this,colsPos+280,700,"ALPO",colorHand);			alphaOS.maximum = 255;			alphaOS.minimum = -255;								}		private function addHand(evt:Event):void {			stage.addEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHand);		}		private function mouseMoveHand(evt:MouseEvent):void {			if (evt.stageY > stage.stageHeight - 50) {				if (mTween != null) {					mTween.stop();				}				mTween = BetweenAS3.to(this,{y:-150,alpha:1},1,Cubic.easeOut);				mTween.play();			} else if (evt.stageY < 550) {				if (mTween != null) {					mTween.stop();				}				mTween = BetweenAS3.to(this,{y:0,alpha:0},1,Cubic.easeOut);				mTween.play();			}		}		private function timerSHand(evt:Event):void {			Index(parent).wrap.resetTimer(evt.target.value);		}		private function spySHand(evt:Event):void {			Index(parent).wrap.resetSpeed(evt.target.value);		}				private function alpSHand(evt:Event):void {			Index(parent).wrap.resetAlpha(evt.target.value);		}				private function colorHand(evt:Event):void{			var str:String = evt.currentTarget.label;			var t:Wrapper = Index(parent).wrap;			trace(t);			switch(str){				case "REDM":					t.redM = evt.target.value;				break;				case "GREM":					t.greenM = evt.target.value;				break;				case "BLUM":					t.blueM = evt.target.value;				break;				case "ALPM":					t.alphaM = evt.target.value;				break;				case "REDO":					t.redO = evt.target.value;				break;				case "GREO":					t.greenO = evt.target.value;				break;				case "BLUO":					t.blueO = evt.target.value;				break;				case "ALPO":					t.alphaO = evt.target.value;				break;				default:				 //nothing;				break;			}						t.resetColor();						}					}}